# Generated by Django 5.2.5 on 2025-08-14 16:11

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("core", "0006_workweek_timeclockdata_dailywork_weeklyovertime"),
    ]

    operations = [
        migrations.CreateModel(
            name="SystemParameters",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("company_name", models.CharField(max_length=300)),
                ("company_activity", models.CharField(blank=True, max_length=500)),
                ("company_manager", models.CharField(blank=True, max_length=300)),
                ("manager_title", models.CharField(blank=True, max_length=300)),
                ("company_logo", models.BinaryField(blank=True, null=True)),
                ("telephone", models.CharField(blank=True, max_length=30)),
                ("fax", models.CharField(blank=True, max_length=30)),
                ("address", models.CharField(blank=True, max_length=500)),
                ("website", models.CharField(blank=True, max_length=50)),
                ("email", models.CharField(blank=True, max_length=50)),
                ("city_headquarters", models.CharField(blank=True, max_length=300)),
                ("signatories", models.CharField(blank=True, max_length=500)),
                ("currency", models.CharField(blank=True, max_length=50)),
                (
                    "minimum_wage",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=22, null=True
                    ),
                ),
                (
                    "default_working_days",
                    models.DecimalField(decimal_places=2, max_digits=22),
                ),
                (
                    "tax_abatement",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=22, null=True
                    ),
                ),
                (
                    "non_taxable_allowance_ceiling",
                    models.DecimalField(decimal_places=2, max_digits=22),
                ),
                (
                    "installment_quota",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=22, null=True
                    ),
                ),
                ("current_period", models.DateField()),
                ("next_period", models.DateField()),
                ("closure_period", models.DateField()),
                ("auto_meal_allowance", models.BooleanField(default=False)),
                ("auto_seniority", models.BooleanField(default=False)),
                ("auto_housing_allowance", models.BooleanField(default=False)),
                ("deduct_cnss_from_its", models.BooleanField(default=False)),
                ("deduct_cnam_from_its", models.BooleanField(default=False)),
                ("special_seniority", models.BooleanField(default=False)),
                ("cnss_number", models.CharField(blank=True, max_length=10)),
                ("cnam_number", models.CharField(blank=True, max_length=10)),
                ("its_number", models.CharField(blank=True, max_length=10)),
                ("used_its", models.IntegerField(default=0)),
                ("its_reimbursement", models.BooleanField(default=False)),
                ("its_mode", models.CharField(blank=True, max_length=10)),
                ("net_account", models.BigIntegerField()),
                ("net_chapter", models.BigIntegerField(blank=True, null=True)),
                ("net_key", models.CharField(blank=True, max_length=10)),
                ("its_account", models.BigIntegerField(blank=True, null=True)),
                ("its_chapter", models.BigIntegerField(blank=True, null=True)),
                ("its_key", models.CharField(blank=True, max_length=10)),
                ("cnss_account", models.BigIntegerField(blank=True, null=True)),
                ("cnss_chapter", models.BigIntegerField(blank=True, null=True)),
                ("cnss_key", models.CharField(blank=True, max_length=10)),
                ("cnam_account", models.BigIntegerField(blank=True, null=True)),
                ("cnam_chapter", models.BigIntegerField(blank=True, null=True)),
                ("cnam_key", models.CharField(blank=True, max_length=10)),
                ("bank_transfer_bank", models.CharField(blank=True, max_length=300)),
                ("transfer_account", models.CharField(blank=True, max_length=300)),
                (
                    "contract_expiry_alert_days",
                    models.IntegerField(blank=True, null=True),
                ),
                ("last_update", models.DateTimeField(auto_now=True)),
                ("license_key", models.CharField(blank=True, max_length=500)),
                ("database_version", models.CharField(blank=True, max_length=10)),
                ("smtp_host", models.CharField(blank=True, max_length=100)),
                ("mail_user", models.CharField(blank=True, max_length=100)),
                ("mail_password", models.CharField(blank=True, max_length=100)),
                ("smtp_port", models.CharField(blank=True, max_length=100)),
                ("smtp_tls_enabled", models.BooleanField(default=False)),
                ("apply_compensatory_allowance", models.BooleanField(default=False)),
                (
                    "add_current_salary_to_leave_cumul",
                    models.BooleanField(default=False),
                ),
                ("deduct_commitments_on_leave", models.BooleanField(default=False)),
                (
                    "customer_active_version",
                    models.CharField(blank=True, max_length=10),
                ),
                ("license_init_date", models.DateField(blank=True, null=True)),
                ("current_license_date", models.DateField(blank=True, null=True)),
                ("license_periodicity", models.CharField(blank=True, max_length=50)),
                ("name", models.CharField(blank=True, max_length=300)),
                ("pub", models.CharField(blank=True, max_length=300)),
                ("attendance_path", models.CharField(blank=True, max_length=500)),
                ("salary_code_number", models.CharField(blank=True, max_length=100)),
                ("rits_account", models.BigIntegerField(blank=True, null=True)),
                ("rits_chapter", models.BigIntegerField(blank=True, null=True)),
                ("rits_key", models.CharField(blank=True, max_length=10)),
                ("rcnss_account", models.BigIntegerField(blank=True, null=True)),
                ("rcnss_chapter", models.BigIntegerField(blank=True, null=True)),
                ("rcnss_key", models.CharField(blank=True, max_length=10)),
                ("rcnam_account", models.BigIntegerField(blank=True, null=True)),
                ("rcnam_chapter", models.BigIntegerField(blank=True, null=True)),
                ("rcnam_key", models.CharField(blank=True, max_length=10)),
                (
                    "cnss_med_credit_account",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "cnss_med_credit_chapter",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("cnss_med_credit_key", models.CharField(blank=True, max_length=10)),
                (
                    "cnss_med_debit_account",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "cnss_med_debit_chapter",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("cnss_med_debit_key", models.CharField(blank=True, max_length=10)),
                (
                    "cnss_pat_credit_account",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "cnss_pat_credit_chapter",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("cnss_pat_credit_key", models.CharField(blank=True, max_length=10)),
                (
                    "cnss_pat_debit_account",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "cnss_pat_debit_chapter",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("cnss_pat_debit_key", models.CharField(blank=True, max_length=10)),
                (
                    "cnam_pat_credit_account",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "cnam_pat_credit_chapter",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("cnam_pat_credit_key", models.CharField(blank=True, max_length=10)),
                (
                    "cnam_pat_debit_account",
                    models.BigIntegerField(blank=True, null=True),
                ),
                (
                    "cnam_pat_debit_chapter",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("cnam_pat_debit_key", models.CharField(blank=True, max_length=10)),
            ],
            options={
                "verbose_name": "System Parameters",
                "verbose_name_plural": "System Parameters",
                "db_table": "paramgen",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(max_length=15, unique=True)),
                ("full_name", models.CharField(max_length=60)),
                ("last_session", models.DateTimeField(auto_now=True)),
                ("can_add", models.BooleanField(default=False)),
                ("can_update", models.BooleanField(default=False)),
                ("can_delete", models.BooleanField(default=False)),
                ("can_access_personnel", models.BooleanField(default=False)),
                ("can_access_payroll", models.BooleanField(default=False)),
                ("can_access_attendance", models.BooleanField(default=False)),
                ("can_access_declarations", models.BooleanField(default=False)),
                ("can_access_accounting", models.BooleanField(default=False)),
                ("can_access_transfers", models.BooleanField(default=False)),
                ("can_access_payslips", models.BooleanField(default=False)),
                ("can_access_reports", models.BooleanField(default=False)),
                ("can_access_statistics", models.BooleanField(default=False)),
                ("can_access_security", models.BooleanField(default=False)),
                ("can_access_parameters", models.BooleanField(default=False)),
                ("can_access_structures", models.BooleanField(default=False)),
                ("can_access_elements", models.BooleanField(default=False)),
                ("can_access_closure", models.BooleanField(default=False)),
                ("can_access_annual_declarations", models.BooleanField(default=False)),
                ("can_access_cumulative_reports", models.BooleanField(default=False)),
                ("can_access_file_import", models.BooleanField(default=False)),
                ("can_access_licensing", models.BooleanField(default=False)),
                ("can_manage_employee_identity", models.BooleanField(default=False)),
                ("can_manage_employee_diplomas", models.BooleanField(default=False)),
                ("can_manage_employee_contracts", models.BooleanField(default=False)),
                ("can_manage_employee_deductions", models.BooleanField(default=False)),
                ("can_manage_employee_leave", models.BooleanField(default=False)),
                ("can_manage_employee_overtime", models.BooleanField(default=False)),
                ("can_manage_employee_payroll", models.BooleanField(default=False)),
                ("can_add_employees", models.BooleanField(default=False)),
                ("can_update_employees", models.BooleanField(default=False)),
                ("can_manage_employee_documents", models.BooleanField(default=False)),
                ("can_manage_salary_grids", models.BooleanField(default=False)),
                ("can_manage_housing_grids", models.BooleanField(default=False)),
                ("can_manage_origins", models.BooleanField(default=False)),
                ("can_suppress_salaries", models.BooleanField(default=False)),
                ("can_manage_payroll_motifs", models.BooleanField(default=False)),
                ("can_access_dashboard", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to.",
                        related_name="payroll_users",
                        related_query_name="payroll_user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="payroll_users",
                        related_query_name="payroll_user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "utilisateurs",
                "ordering": ["full_name"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
